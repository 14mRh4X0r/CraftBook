buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1'
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.12.1"
    id "com.github.johnrengelman.shadow" version "1.2.3"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.jfrog.artifactory-upload'
apply plugin: 'eclipse'
apply plugin: 'idea'

if (!project.hasProperty("artifactory_contextUrl")) ext.artifactory_contextUrl = "http://localhost"
if (!project.hasProperty("artifactory_user")) ext.artifactory_user = "guest"
if (!project.hasProperty("artifactory_password")) ext.artifactory_password = ""

if (!project.hasProperty("gitCommitHash")) {
    try {
        def repo = Grgit.open(project.file('.'))
        ext.gitCommitHash = repo.head().abbreviatedId
    } catch (Exception e) {
        ext.gitCommitHash = "no_git_id"
    }
}

defaultTasks 'licenseFormat', 'build'

group = 'com.sk89q.craftbook'
version = '4.0-SNAPSHOT'
ext.internalVersion = version + ";" + gitCommitHash

sourceCompatibility = 1.8
targetCompatibility = 1.8


//checkstyle.configFile = new File(rootProject.projectDir, "config/checkstyle/checkstyle.xml")

repositories {
    mavenCentral()
    maven { url "http://repo.spongepowered.org/maven/" }
    maven { url "http://maven.sk89q.com/repo/" }
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://dl.bintray.com/me4502/maven' }
}

dependencies {
    compile 'org.spongepowered:spongeapi:3.0.0'
    compile 'com.google.guava:guava:18.0'
    compile 'com.google.code.findbugs:jsr305:1.3.9'
    compile 'com.owlike:genson:1.3'
    compile 'com.me4502:ModularFramework:1.3.0'
    testCompile 'org.mockito:mockito-core:2.+'
    testCompile 'junit:junit:4.+'
}

println """
*******************************************
 You are building CraftBook!

 If you encounter trouble:
 1) Read COMPILING.md if you haven't yet
 2) Use gradlew and not gradle
 3) If you still need help, ask on IRC! irc.esper.net #sk89q

 Output files will be in build/libs
*******************************************
"""

if (JavaVersion.current().isJava8Compatible()) {
    // Java 8 turns on doclint which we fail
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

license {
    ext {
        year = Calendar.getInstance().get(Calendar.YEAR)
    }

    header = file('HEADER.txt')
    include '**/*.java'

    ignoreFailures = false
    strictCheck = true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives shadowJar
    archives sourcesJar
    archives javadocJar
}

//build.dependsOn(checkstyleMain)
//build.dependsOn(checkstyleTest)
build.dependsOn(sourcesJar)
build.dependsOn(javadocJar)

shadowJar {
    classifier 'dist'
    dependencies {
        relocate ("com.me4502.modularframework", "com.sk89q.craftbook.util.modularframework") {
            include(dependency("com.me4502:ModularFramework"))
            exclude "com.me4502.modularframework.ModularFramework"
        }

        include(dependency("com.owlike:genson"))
    }
    exclude 'GradleStart**'
    exclude '.cache'
    exclude 'LICENSE*'
    exclude "com/me4502/modularframework/ModularFramework.class" //Don't copy across the file that was left out of ModularFramework.
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = project.version.contains("SNAPSHOT") ? 'libs-snapshot-local' : 'libs-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
    }

    resolve {
        repository {
            repoKey = 'repo'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}
